networks:
  default:
    driver: bridge
    name: roboshop
    #external: true #if we create by giving commmand in docker endgine then we have enalbe it

volumes: # This is equal to docker volume create <volume-name>
  mongodb:
  redis:
  mysql:
  rabbitmq:

services:
  mongodb:
    image: suryaprakashkosra/mongodb:v1
    container_name: mongodb
    volumes:
    - mongodb:/data/db
  
  catalogue:
    image: suryaprakashkosra/catalogue:v1
    container_name: catalogue
    depends_on: 
    - mongodb

  redis: 
    image: redis
    container_name: redis
    volumes:
    - redis:/data
  
  user:
    image: suryaprakashkosra/user:v1
    container_name: user
    depends_on: 
    - redis
    - mongodb

  cart:
    image: suryaprakashkosra/cart:v1
    container_name: cart
    depends_on:
    - redis
    - catalogue

  mysql:
    image: suryaprakashkosra/mysql:v1
    container_name: mysql
    volumes:
    - mysql:/var/lib/mysql

  shipping:
    image: suryaprakashkosra/shipping:v1
    container_name: shipping
    depends_on:
    - mysql
    - cart

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: roboshop
      RABBITMQ_DEFAULT_PASS: roboshop123
    volumes:
    - rabbitmq:/var/lib/rabbitmq

  payment:
    image: suryaprakashkosra/payment:v1
    container_name: payment
    environment:
      CART_HOST: cart
      CART_PORT: 8080
      USER_HOST: user
      USER_PORT: 8080
      AMQP_HOST: rabbitmq
      AMQP_USER: roboshop
      AMQP_PASS: roboshop123
    depends_on:
    - rabbitmq
    - cart
    - user

  frontend:
    image: suryaprakashkosra/frontend:v1
    container_name: frontend
    ports:
    - "80:80"
    depends_on:
    - catalogue
    - cart
    - user
    - shipping
    - payment



